// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool.Dados.Contextos;

namespace SmartSchool.Dados.Migrations
{
    [DbContext(typeof(SmartContexto))]
    [Migration("20210730161353_MigrationInicial")]
    partial class MigrationInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SmartSchool")
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartSchool.Dominio.Alunos.Aluno", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnName("ALUN_ID_ALUNO")
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnName("ALUN_IN_ATIVO")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataFim")
                        .HasColumnName("ALUN_DT_FIM")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnName("ALUN_DT_INICIO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnName("ALUN_DT_NASCIMENTO")
                        .HasColumnType("datetime2");

                    b.Property<int>("Matricula")
                        .HasColumnName("ALUN_COD_ALUNO")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("ALUN_NM_NOME")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnName("ALUN_NM_SOBRENOME")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Telefone")
                        .HasColumnName("ALUN_NR_TELEFONE")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.HasKey("ID");

                    b.ToTable("ALUNO");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Disciplinas.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("DISC_ID_DISCIPLINA")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("DISC_NM_NOME")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.Property<int>("ProfessorId")
                        .HasColumnName("DISC_ID_PROFESSOR")
                        .HasColumnType("int")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("DISCIPLINA");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Professores.Professor", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnName("PROF_ID_PROFESSOR")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("PROF_NM_NOME")
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("ID");

                    b.ToTable("PROFESSOR");
                });

            modelBuilder.Entity("SmartSchool.Dominio.Disciplinas.Disciplina", b =>
                {
                    b.HasOne("SmartSchool.Dominio.Professores.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
